# define proxy upstream to Elasticsearch via loopback interface in 
upstream elasticsearch {
  server elasticsearch:9200;
}

upstream kibana {
  server kibana:5601;
}

server {
  # enable TLS
  listen 0.0.0.0:9200 ssl;
  ssl_certificate /etc/nginx/ssl/nginx.crt;
  ssl_certificate_key /etc/nginx/ssl/nginx.key;
  ssl_protocols TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_session_timeout 5m;
  ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    
  # Proxy for Elasticsearch 
  location / {
    auth_basic "Elasticsearch Login";
    auth_basic_user_file passwords;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;
    
    # use defined upstream with the name "elasticsearch"
    proxy_pass http://elasticsearch/;
    proxy_redirect off;
    
    if ($request_method = OPTIONS ) {
      add_header Access-Control-Allow-Origin "*"; 
      add_header Access-Control-Allow-Methods "GET, POST, , PUT, OPTIONS";
      add_header Access-Control-Allow-Headers "Content-Type,Accept,Authorization, x-requested-with"; 
      add_header Access-Control-Allow-Credentials "true"; 
      add_header Content-Length 0;
      add_header Content-Type application/json;
      return 200;
    }
  } 
}

server {
  listen 0.0.0.0:5601;

  location / {
    auth_basic "Kibana Login";
    auth_basic_user_file passwords;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;
    # use defined upstream with the name "elasticsearch"
    proxy_pass http://kibana/;
    proxy_redirect off;
    
    if ($request_method = OPTIONS ) {
      add_header Access-Control-Allow-Origin "*"; 
      add_header Access-Control-Allow-Methods "GET, POST, , PUT, OPTIONS";
      add_header Access-Control-Allow-Headers "Content-Type,Accept,Authorization, x-requested-with"; 
      add_header Access-Control-Allow-Credentials "true"; 
      add_header Content-Length 0;
      add_header Content-Type application/json;
      return 200;
    }
  }
}
